# the Python program that connects to the reservation table in the MySQL database and handles all requests related to this table.
"""the functions defined in this module are
   welcome(), m_rowcount, m_choice1(), m_choice2(),
   m_choice3(), m_choice4(), update(update_choice), tablemenu_or_quit()."""

   

import os
import mysql.connector as sqltor
def welcome():
    # the function that asks the user for a choice and responds accordingly.
    print('Enter')
    print('1, to add details of a reservation to the database.')
    print('2, to update details of reservation.')
    print('3, to remove record(s) of reservation.')
    print('4, to display required data.')
    print('5, to exit the window.')

    while True:
        ch = int(input('Enter your choice:'))
        if ch == 1:
            m_choice1()
        elif ch == 2:
            m_choice2()
        elif ch == 3:
            m_choice3()
        elif ch == 4:
            m_choice4()
        elif ch == 5:
            os._exit(ch == 5)
        else:
            print('Please do enter a valid choice (1 to 5):')


def m_rowcount():
    # returns the total number of rows in the movies table eveytime it is called.
    cursor.execute('select * from reservation')
    count = cursor.rowcount
    print("Total number of restaurant resrvation records:", count)


def m_choice1():
    # gets the values from the user at run time and inserts the record into the movie table.
    m_rec = []
    n = int(input('How many records do you want to add?'))
    for i in range(n):
        print('Record', i+1)
        t_name = input('Enter the cuisine name:')
        t_no = int(input('Enter the reservation no:'))
        m_name = input("Enter the time:")
        t_price = int(input("Enter the advance money paid:"))
        paid = input("no.of seats:")
        m_rec.append([t_name, t_no, m_name, t_price, paid])
        print()
    ins_query = "insert into reservation values(%s, %s, %s,%s, %s)"
    cursor.executemany(ins_query, m_rec)
    con.commit()
    print('Records inserted successfully.')
    m_rowcount()
    tablemenu_or_quit()

def m_choice2():
    # the function called when the update choice is selected. This calls the update function defined separately.
    cond = True
    while cond:
        print('Do you want to update:')
        print("1. Cuisine name")
        print("2. Reservation no")
        print("3. Time")
        print("4. Advance money")
        print("5. No of seats")
        update_choice = int(input('Enter your choice:'))
        update(update_choice)
        print('Record updated successfully.')
        m_rowcount()
        user_cont = input('Do you want to update more records? [y/n]')
        if user_cont == 'y' or user_cont == 'Y':
            cond = True
        else:
            break
    tablemenu_or_quit()


def update(update_choice):
    # takes any column from the reservation table in general and updates one column at a time.
    if update_choice in range(1,6):
        update_col = mtable_col[update_choice-1]
    else:
        print('Enter a valid choice (1 to 5):')
    m_old = input('Enter the existing ' + update_col + ':')
    t = type(m_old)
    m_new = t(input('Enter the new ' + update_col + ':'))
    condn = input(
        'Enter conditions, if any, using the column names cuisine, Reservation_no, time, advance_money, no_of_seats:')
    if condn == '':
        if t == str:
            update_query = 'update reservation set ' + update_col + \
                ' = "{mn}" where '.format(
                    mn=m_new) + update_col + ' = "{mo}"' .format(mo=m_old)
        else:
            update_query = 'update reservation set ' + update_col + \
                ' = {mn} where '.format(mn=m_new) + \
                update_col + ' = {mo}' .format(mo=m_old)
    else:
        if t == str:
            update_query = 'update reservation set ' + update_col + \
                ' = "{mn}" where '.format(
                    mn=m_new) + update_col + ' = "{mo}"' .format(mo=m_old) + ' and ' + condn
        else:
            update_query = 'update reservation set ' + update_col + \
                ' = {mn} where '.format(mn=m_new) + \
                update_col + ' = {mo}' .format(mo=m_old) + ' and ' + condn
    cursor.execute(update_query)
    con.commit()

def m_choice3():
    # this function removes required records from the movies table.
    cond = True
    while cond:
        remove_col = int(
            input('Enter the Reservation no whose record is to be removed:'))
        remove_query = 'delete from reservation where Reservation_no = %s' % (
            remove_col)
        cursor.execute(remove_query)
        con.commit()
        print('Record removed successfully.')
        m_rowcount()
        user_cont = input('Want to delete more rows? [y/n]')
        if user_cont == 'y' or user_cont == 'Y':
            cond = True
        else:
            break
    tablemenu_or_quit()


def m_choice4():
    # d_choice4(): this function queries data from the table and displays it in the Python output screen.
    cond = True
    while cond:
        condn = input(
            'Enter conditions, if any, using the column cuisine, Reservation_no, time, advance money, no of seats:')
        if condn == '':
            select_query = "select * from reservation"
        else:
            select_query = "select * from reservation where " + condn
        cursor.execute(select_query)
        data = cursor.fetchall()
        for i in data:
            print(i)
        cont = input('Do you want to access a different set of data? [y/n]')
        if cont=='y' or cont=='Y':
            cond=True
        else:
            break
            
    tablemenu_or_quit()


def tablemenu_or_quit():
    # This function applies to all the modules defined for each table.
    # The user of the program has an option to go back to the respective table's menu, or quit the window then and there.
    back = input('Enter y to go back to the movie menu, or n to quit.')
    if back.lower() == 'y':
        welcome()
    else:
        os._exit(back.lower() == 'n')


# _main_
con = sqltor.connect(host='localhost', user='Root_',
                     password='12345678', database='Restaurant_Reservation')
cursor = con.cursor(buffered=True)
print('\t******RESERVATION******')
mtable_col = ['Cuisine', 'Reservation_no', 'time', 'advance_money', 'no_of_seats']

m_rowcount()
print()
welcome()
con.close()
